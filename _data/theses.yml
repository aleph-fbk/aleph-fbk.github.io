# ===== template for a thesis =====
# - id:                 # ID of the thesis
#   author:             # ID of the student
#   title:              # Title of the thesis
#   type:               # B for bachelor, M for master, P for PhD, PG for Postgraduate Thesis
#   abstract: >
#     Textual abstract
#   supervisor:         # ID of supervisor
#   co-supervisor:      # List of IDs of co-supervisors
#     -
#   year:               # Year of the thesis ("YYYY")
#   awards:             # Eventual awards (e.g., CLUSIT)
#   institution:        # Insitution (e.g., University of Trento)


## 2024
- id: StefanoBerlato_PHD
  author: StefanoBerlato
  title: "A Security Service for Performance-Aware End-to-End Protection of Sensitive Data in Cloud Native Applications"
  type: P
  abstract: >
    The characteristics of cloud native applications — like decentralized architectures, high automation, and dynamic and interconnected microservices — bring forth a number of security challenges across both architectural design and lifecycle management. Some prominent challenges are authentication and authorization, real-time detection of security incidents, network security, microservice (as well as container) security, and, especially, data security. An ecosystem of security mechanisms already exists and provides excellent solutions addressing these challenges throughout the developing and operating of cloud native applications: identity and access management, monitoring and logging, intrusion prevention and detection systems, vulnerabilities assessment and hardening, and cryptography, to mention a few. Nonetheless, despite the availability of such a rich ecosystem, some cloud native applications entail additional considerations linked to the aforementioned challenges — and, in particular, to data security — which may need to be contemplated when evaluating the adoption of security mechanisms and their effectiveness. First, the level of trust assigned to participating parties within the scope of some cloud native applications is inherently limited — e.g., those aligning with the well-known security-by-design and zero trust principles. These cloud native applications confront a multifaceted threat landscape that extends beyond external attackers by including malicious insiders and honest-but-curious cloud providers which threaten the confidentiality and integrity of the (often sensitive) data managed by cloud native applications. Moreover, cloud native applications are frequently deployed in resource-constrained environments — e.g., the Internet of Things (IoT) — or operate in delicate fields (e.g., eHealth, automotive) offering critical functions (e.g., remote monitoring, cooperative vehicle maneuvering) where the quality of service may suffer from computationally or network heavy security mechanisms. In other words, security is not absolute, and its achievement must instead be balanced with that of performance requirements relevant to the underlying cloud native applications — e.g., low latency, minimal bandwidth utilization, and high scalability — underscoring the necessity for nuanced security mechanisms that are mindful of performance aspects. Therefore, in this thesis, we propose a security service addressing the convoluted dynamics of data security in cloud native applications. Our security service comprises four security mechanisms — namely CryptoAC, ACE and ACME, and MOMO — which implement the actual contributions of this thesis as we describe below. First, the threat model of cloud native applications requires preventing unauthorized access to data while offering strong guarantees of data confidentiality and integrity. To this end, we consider the use of cryptography to enforce Access Control (AC) policies — a combination usually called Cryptographic Access Control (CAC) — and propose the design of two CAC schemes, compatible with the aforementioned characteristics, for the end-to-end (E2E) protection of data both in transit and at rest in cloud native applications. We implement both CAC schemes — one for Role-Based Access Control (RBAC) and one Attribute-Based Access Control (ABAC) — into CryptoAC , discuss its security, and conduct a thorough performance evaluation. Then, we propose a methodology for evaluating the performance of generic AC enforcement mechanisms — hence, applicable to both CAC and centralized AC — starting from realistic workloads expressed as Business Process Model and Notation (BPMN) workflows. In detail, our methodology comprises a procedure deriving sequences of AC requests (e.g., access data, distribute permission) which are representative of the scenarios in which a cloud native application is deployed, and an evaluator executing these sequences against the AC enforcement mechanisms under test; we implement the procedure and the evaluator into ACE and ACME, respectively. Finally, we define an architectural model that identifies the common base building blocks of CAC over which we formalize a Multi-Objective Combinatorial Optimization Problem (MOCOP) to balance the achievement of security and performance in cloud native applications. Consequently, we implement an algorithm to solve the aforementioned MOCOP in MOMO, for which we provide both a conceptual application and a proof-of-concept application.
  supervisor:
    - SilvioRanise
    - RobertoCarbone
  year: 2024
  awards: 
  institution: University of Genoa

- id: SimoneBrunello_BA
  author: SimoneBrunello_BA
  title: "Hybrid Enforcement for Role-based Cryptographic Access Control"
  type: B
  abstract: >
    Numerous companies are currently migrating (or have already migrated) their technological infrastructure along with their data and their customers' data to the cloud for, e.g., enhanced scalability, greater flexibility, and monetary cost savings. However, it is well-known that outsourcing the storage of (possibly sensitive) data to the cloud poses significant challenges to the confidentiality and integrity of the data themselves. Indeed, cloud-hosted data are exposed to a wide array of threats including external attackers, malicious insiders, and honest-but-curious cloud service providers (CSPs). In this context, cryptographic access control (CAC) — which consists in enforcing access control (AC) policies through cryptography — is the natural solution to regulate data sharing among authorized users (e.g., employees) while securing data and preventing unauthorized access. Nonetheless, the use of CAC entails the execution of several cryptographic computations (e.g., encryption and decryption computations), especially when considering dynamic AC policies requiring frequent distribution and revocation of users' privileges. Consequently, CAC is typically computationally demanding and may even result to be impractical in some real-world scenarios. In this thesis, we propose an extended role-based access control (RBAC) scheme to mitigate the computational overhead of CAC. Our extended RBAC scheme allows for expressing high-level RBAC policies which are automatically compiled into two sub-policies enforced in a hybrid fashion by a (computationally-light) centralized traditional RBAC enforcement mechanism and a (computationally-demanding) CAC scheme. The automatic compilation is controlled by a customizable security model defining the levels of trust assumed on, e.g., users and CSPs, an approach which allows to determine whether the execution of certain cryptographic computations is necessary or superfluous on a case-by-case basis. Moreover, we apply our extended RBAC scheme to a concrete CAC scheme and provide a proof-of-concept implementation in the Prolog language. Finally, we provide a practical application of our proof-of-concept implementation on a concrete scenario and analyze the cryptographic computational costs incurred.
  supervisor: SilvioRanise
  co-supervisor:
    - RobertoCarbone
    - StefanoBerlato
  year: 2024
  awards: 
  institution: University of Trento

## 2023
- id: IonAndyDitu_BA
  author: IonAndyDitu_BA
  title: "Leveraging Trusted Execution Environment for Efficient Revocation and Security in Cryptographic Access Control"
  type: B
  abstract: >
    The Cloud has become an increasingly popular solution for data sharing and storage due to its inher- ent convenience, scalability, and cost-effectiveness qualities. However, outsourcing (possibly sensitive) data to Cloud Service Providers (CSPs) raises concerns about data privacy and security, as it leaves the data exposed to a heterogeneous set of threats such as external attackers, malicious insiders, miscon- figurations of Cloud services and honest but curious CSPs. To address these concerns, cryptography is usually employed to make the data unreadable by external attackers, while Access Control (AC) policies are defined and enforced to ensure that the data can be accessed by authorized users only. In this context, Cryptographic Access Control (CAC) is the natural solution to enable secure and controlled sharing of (encrypted) data. Essentially, CAC enforces AC policies through cryptography by (i) using cryptographic keys to encrypt data and then (ii) distributing these keys to authorized users. By doing so, CAC ensures that Cloud-hosted data remains protected — i.e., confidentiality and integrity of data are guaranteed — even in the presence of malicious insiders and partially trusted CSPs. In other words, CAC allows organizations to leverage the benefits of the Cloud for data sharing and storage while maintaining a high level of data security and privacy. Nonetheless, aside from its many benefits, CAC comes with its own challenges, especially for what concerns its practicality. In particular, achieving a reasonable efficiency while preserving security during user revocation — that is, the process of revoking the privileges or permissions granted to a user over some data — is a critical challenge in CAC. Indeed, traditional approaches for implementing user revocation in CAC consist in renewing and redistributing cryptographic material (e.g., new keys used to encrypt data) and re-encrypting existing data with the new keys to prevent revoked users from still accessing (i.e., decrypting) the data using cached old keys. Intuitively, the user revocation process incurs noticeable computational costs that hinder the scalability and responsiveness of CAC even to the point of ques- tioning its usability in real-world scenarios. Therefore, in this thesis, we investigate the use of popular hardware-based security technologies — such as Trusted Execution Environments (TEEs), Hardware Security Modules (HSMs), Secure Elements (SEs) and Trusted Platform Modules (TPMs) — as a solution to address the (currently almost prohibitive) computational overhead associated with tradi- tional user revocation in generic CAC schemes. In particular, we explore the functional characteristics and the security features of these hardware technologies to find the one most suitable for CAC, analyz- ing advantages and disadvantages of client-side and server-side use. Then, we design a methodology that employs client-side TEEs as a mean to mitigate the computational burden of traditional user revocation in CAC. Our intuition consists in exploiting the secure and isolated execution environment of TEEs to perform the cryptographic operations expected by CAC schemes (e.g., en/decrypt data) at the client-side while concealing cryptographic keys from users — who, consequently, cannot cache such keys. In this way, we remove the need for renewing keys and re-encrypting data after a user revocation, significantly reducing the associated computational overhead. We define in detail the flow of operations in our methodology, which encompasses 4 phases, namely onboarding, data upload, data download, and user revocation. In the onboarding phase — executed only once when configuring user' accounts — users are registered in the CAC scheme, while in the data upload and download phases users en/decrypt data according to the CAC scheme being used; in other words, besides for being run within TEEs, our methodology poses no (or minimal) modifications to the logic of the CAC scheme. Lastly, during user revocation, we just need to remove the revoked user's permissions from the AC policy, as the TEE automatically disposes of the keys from the revoked user's device.
  supervisor: SilvioRanise
  co-supervisor:
    - RobertoCarbone
    - StefanoBerlato
  year: 2023
  awards: 
  institution: University of Trento
